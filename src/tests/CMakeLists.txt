CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

# Prepare testing infrastructure.
INCLUDE(SetupGoogleTest)
INCLUDE(SetupProtobuf)

SETUP_GOOGLE_TEST()
SETUP_PROTOBUF()

INCLUDE_DIRECTORIES(
    SYSTEM ${GTEST_INCLUDE_DIR}
    SYSTEM ${GMOCK_INCLUDE_DIR}
    SYSTEM ${PROTOBUF_INCLUDE_DIR}
)

LINK_DIRECTORIES(${GTEST_BINARY_DIR} ${GMOCK_BINARY_DIR})

# Configure some handy variables.
SET(PROJECT osirose-tests)
SET(CMAKE_BUILD_TYPE "Debug")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -pedantic -Wextra")

ADD_DEFINITIONS(-DSERVER_TESTING)

file(GLOB_RECURSE CORE_HEADERS . ${CMAKE_SOURCE_DIR}/src/core/*.[h])
file(GLOB_RECURSE ROSE_HEADERS . ${CMAKE_SOURCE_DIR}/src/core/*.[h])
file(GLOB_RECURSE LOGIN_HEADERS . ${CMAKE_SOURCE_DIR}/src/login/*.[h])
file(GLOB_RECURSE CHAR_HEADERS . ${CMAKE_SOURCE_DIR}/src/char/*.[h])
file(GLOB_RECURSE MAP_HEADERS . ${CMAKE_SOURCE_DIR}/src/map/*.[h])
file(GLOB_RECURSE PROJECT_TESTING_HEADERS . *.[h])

SET(HEADERS
    ${CORE_HEADERS}
    ${PROJECT_TESTING_HEADERS}
)

SET(SOURCE_MAIN main)

SET(SOURCES_BASE
	src/test_crosecrypt
)

SET(SOURCES
    ${SOURCE_MAIN}
    ${SOURCES_BASE}
)

PROJECT(${PROJECT})

INCLUDE_DIRECTORIES(
    ${CMAKE_SOURCE_DIR}/src/core/include
    ${CMAKE_SOURCE_DIR}/src/rosecommon/include
    ${CMAKE_SOURCE_DIR}/src/login/include
    ${CMAKE_SOURCE_DIR}/src/char/include
    ${CMAKE_SOURCE_DIR}/src/map/include
    ${CMAKE_SOURCE_DIR}/tools/
)

FIND_PACKAGE( Threads REQUIRED )

ADD_EXECUTABLE(${PROJECT} ${HEADERS} ${SOURCES})

ADD_DEPENDENCIES(${PROJECT} googletest)

IF(ENABLE_TESTING_COVERAGE)
    INCLUDE(CodeCoverage)
    SETUP_TARGET_FOR_COVERAGE(coverage ${PROJECT} coverage)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fprofile-arcs -ftest-coverage")
ENDIF() # ENABLE_TESTING_COVERAGE

TARGET_LINK_LIBRARIES(${PROJECT}
    ${CMAKE_THREAD_LIBS_INIT}
    gtest
    ${COVERAGE_LIBRARIES}
)
