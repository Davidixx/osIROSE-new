sudo: false
dist: bionic
language: cpp

env:
  global:
  #discord webhook
  - secure: "MXG3LzmYr0KLqEw3WZo1qY3/iGVaAQuAcE/V9ad3FlpBz89BoNpNP+frf6Yrvamy/UGiR14hgcPbzmTI5DvdBkdFpf9K0xuLRAOsxOMPfTU2d6ip42uifDJ8koXg8INzOk8iab9TftzY2Zg/u4/L3JEo2HWbKFndQMCke7IZqpNOCcrJWdXtpb0/QKpcCxbovS4toAAkmi1P/2S21CdTnZLF4ee06h5yChkrHjXNPiDfBpM5uhuIkH/KS0ruv9WyUTd7gGtgQ7KzKcyRCWv3G9jXZNbP5nXGVsPFnRz1o3ZBBgBX2ZYQsYoMqQdbfFTe8hi6xuabSACAxlhQh3+f8l05a43d1zP7uWh7on0z4CAVIbM7MVBjfJYT1lzQNujpyjPO1DhiT4+2wGzdCNLqu2KFxhgj8nsafYs/Esj7Ie1zn7IcquruqJg24QTFgTxvuACidQcuTnc9f5NBM+hLqWTsvnD0tvFzkk5tEzc3XJwmTzXWk348DTO+SmXZvs5EiMORue7igCa8QGnWT6R4WtCrNBSDWza17VV9uGUJhgakI8bSvTOlUhUpsBmPR5rPaRZKkKTvpm6KLsqEj1dqEyyE69aTZ+ow+mRX16PiZT6feW9nyFvshkA4UzBHwN9Y9/kz/xSwz6Tg7WDG69Ru3XGY7FuxKAmTjJm4DspOdZ4="
  - PATH=${TRAVIS_BUILD_DIR}/3rdparty/bin:${TRAVIS_BUILD_DIR}/3rdparty/usr/bin:${TRAVIS_BUILD_DIR}/3rdparty/usr/local/bin:${TRAVIS_BUILD_DIR}/cmake_app/bin:${TRAVIS_BUILD_DIR}/ninja:$HOME/usr/bin:$HOME/usr/local/bin:$PATH
  - CI_DIRECTORY=${TRAVIS_BUILD_DIR}/cmake/scripts
  - CCACHE_SLOPPINESS="pch_defines,time_macros"
  - WITH_CRASH_REPORTS=ON
  - BUILD_JOB_COUNT=4
  - SUITE=tests
  - PREFIX=${TRAVIS_BUILD_DIR}/build/3rdparty
  - LCOV_PATH=${TRAVIS_BUILD_DIR}/build/3rdparty/usr/local/bin/lcov
  - GENHTML_PATH=${TRAVIS_BUILD_DIR}/build/3rdparty/usr/local/bin/genhtml

#services:
#  mysql

cache:
  pip: true
  ccache: true
  bundler: true
  directories:
  - ${TRAVIS_BUILD_DIR}/build/3rdparty/bin
  - ${TRAVIS_BUILD_DIR}/build/3rdparty/usr
  - ${TRAVIS_BUILD_DIR}/build/3rdparty/lib
  - ${TRAVIS_BUILD_DIR}/build/3rdparty/include
  - ${TRAVIS_BUILD_DIR}/ninja

stages:
  - prepare cache
  - compile
  - test
  - notify

jobs:
  include:
    - &gccinit
      arch: amd64
      stage: prepare cache
      if: branch != coverity_scan
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      compiler: g++
      addons:
        apt:
          sources:
          - deadsnakes
          - ubuntu-toolchain-r-test
          packages:
          - lcov
          - g++-8
          - libcurl4-openssl-dev
      before_install:
        - eval "${MATRIX_EVAL}"
        - export PREFIX=${TRAVIS_BUILD_DIR}/build/3rdparty
        - export PATH=${TRAVIS_BUILD_DIR}/build/3rdparty/bin:$PATH
      install:
        ############################################################################
        # Install a recent CMake
        ############################################################################
        - |
          if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
            CMAKE_URL="https://github.com/Kitware/CMake/releases/download/v3.14.5/cmake-3.14.5-Linux-x86_64.tar.gz"
            mkdir cmake_app && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C $TRAVIS_BUILD_DIR/cmake_app
          else
            brew upgrade cmake || brew install cmake
          fi
        - cmake --version
        - ccache --version
        - ccache --show-stats
        - bash $CI_DIRECTORY/install-lcov.sh
        - bash $CI_DIRECTORY/install-ninja.sh
        - pip install --user pyparsing
      script: true

    - &gccarminit
      arch: arm64
      stage: prepare cache
      if: branch != coverity_scan
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      compiler: g++
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-8
          - libcurl4-openssl-dev
      before_install:
        - eval "${MATRIX_EVAL}"
        - export PREFIX=${TRAVIS_BUILD_DIR}/build/3rdparty
        - export PATH=${TRAVIS_BUILD_DIR}/build/3rdparty/bin:$PATH
      install:
        - |
          CMAKE_URL="https://github.com/Kitware/CMake/releases/download/v3.15.4/cmake-3.15.4.tar.gz"
          mkdir cmake_src && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C $TRAVIS_BUILD_DIR/cmake_src
          cd cmake_src && ./bootstrap --prefix=$TRAVIS_BUILD_DIR/cmake_app && make && make install
          cd ..
        - cmake --version
        - bash $CI_DIRECTORY/install-lcov.sh
        - bash $CI_DIRECTORY/install-ninja.sh
        - pip install --user pyparsing
      script: true

    - <<: *gccinit
      stage: compile
      if: branch != coverity_scan
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8" SUITE=tests BUILD_TYPE=Release
      before_install:
        - eval "${MATRIX_EVAL}"
      before_script:
        - export CC=gcc-8 CXX=g++-8 GCOV_EXEC=gcov-8
#        - mysql -u root -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('')"
#        - mysql --user="root" -e 'create database osirose;'
#        - mysql --user="root" --database="osirose" --password="" < "$TRAVIS_BUILD_DIR/Database/osirose.sql"
        - bash $CI_DIRECTORY/before_script.sh
      script:
        - cd build
        - cmake -GNinja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DWITH_CRASH_REPORTS=${WITH_CRASH_REPORTS} ..
        - cmake --build . -- -j ${BUILD_JOB_COUNT}

    - <<: *gccarminit
      stage: compile
      if: branch != coverity_scan
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8" SUITE=tests BUILD_TYPE=Release
      before_install:
        - eval "${MATRIX_EVAL}"
      before_script:
        - export CC=gcc-8 CXX=g++-8 GCOV_EXEC=gcov-8
        - bash $CI_DIRECTORY/before_script.sh
      script:
        - cd build
        - cmake -GNinja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ..
        - cmake --build . -- -j ${BUILD_JOB_COUNT}

    - &notify
      stage: notify
      cache: false
      script: true
      services: false
      git:
        submodules: false
      after_success:
        - wget https://raw.githubusercontent.com/k3rn31p4nic/travis-ci-discord-webhook/master/send.sh
        - chmod +x send.sh
        - ./send.sh success $WEBHOOK_URL