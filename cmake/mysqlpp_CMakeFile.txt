cmake_minimum_required(VERSION 2.8 FATAL_ERROR)

INCLUDE_DIRECTORIES(
	SYSTEM ${MYSQL_INCLUDE_DIRS}
)

LINK_DIRECTORIES(${MYSQL_LIB_DIR} ${MYSQL_LIBRARY})

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

project("mysqlpp")

SET(CMAKE_BUILD_TYPE $ENV{BUILD_TYPE})

IF (${CMAKE_CXX_COMPILER_ID} STREQUAL MSVC)

IF($(CMAKE_BUILD_TYPE) STREQUAL DEBUG)
	add_definitions(-D_DEBUG)
	add_definitions(-DMYSQLPP_MAKING_DLL)
	add_definitions(-D_WIN32)
	add_definitions(-DHAVE_MYSQL_SSL_SET)
	
	set(CMAKE_CXX_FLAGS " /Od /EHsc /MD /Zi /GR /nologo /RTC1")
	set(MSVC_LINK_FLAGS " /DEBUG /INCREMENTAL")
ELSE()
        add_definitions(-DMYSQLPP_MAKING_DLL)
        add_definitions(-D_WIN32)
        add_definitions(-DHAVE_MYSQL_SSL_SET)
	set(CMAKE_CXX_FLAGS " /Ox /EHsc /MD /GL /GR /nologo")
	set(MSVC_LINK_FLAGS " /RELEASE /LTCG /INCREMENTAL:NO /NOLOGO")
ENDIF()


foreach(flag_var
        CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE
        CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
   if(${flag_var} MATCHES "/MD")
      string(REGEX REPLACE "/MD" "/MT" ${flag_var} "${${flag_var}}")
   endif(${flag_var} MATCHES "/MD")
endforeach(flag_var)

ENDIF()

SET( SOURCES_BASE
beemutex.cpp
cmdline.cpp
connection.cpp
cpool.cpp
datetime.cpp
dbdriver.cpp
field_names.cpp
field_types.cpp
manip.cpp
myset.cpp
mysql++.cpp
mystring.cpp
null.cpp
options.cpp
qparms.cpp
query.cpp
result.cpp
row.cpp
scopedconnection.cpp
sql_buffer.cpp
sqlstream.cpp
ssqls2.cpp
stadapter.cpp
tcp_connection.cpp
transaction.cpp
type_info.cpp
uds_connection.cpp
utility.cpp
vallist.cpp
wnp_connection.cpp
autoflag.h
beemutex.h
cmdline.h
common.h
comparable.h
connection.h
cpool.h
datetime.h
dbdriver.h
exceptions.h
field.h
field_names.h
field_types.h
insertpolicy.h
manip.h
myset.h
mystring.h
noexceptions.h
null.h
options.h
qparms.h
querydef.h
query.h
refcounted.h
result.h
row.h
scopedconnection.h
sql_buffer.h
sqlstream.h
sql_types.h
ssqls2.h
ssqls.h
stadapter.h
stream2string.h
tcp_connection.h
tiny_int.h
transaction.h
type_info.h
uds_connection.h
utility.h
vallist.h
wnp_connection.h
mysql++.h
)

add_library(mysqlpp STATIC ${SOURCES_BASE})
