index include/sqlpp11/char_sequence.h
--- include/sqlpp11/char_sequence.h
+++ include/sqlpp11/char_sequence.h
@@ -54,16 +54,16 @@ namespace sqlpp
     }
   };
 
-  template <std::size_t N, const char (&s)[N], typename T>
+  template <std::size_t N, const char (*s)[N], typename T>
   struct make_char_sequence_impl;
 
-  template <std::size_t N, const char (&s)[N], std::size_t... i>
+  template <std::size_t N, const char (*s)[N], std::size_t... i>
   struct make_char_sequence_impl<N, s, sqlpp::detail::index_sequence<i...>>
   {
-    using type = char_sequence<s[i]...>;
+    using type = char_sequence<(*s)[i]...>;
   };
 
-  template <std::size_t N, const char (&Input)[N]>
+  template <std::size_t N, const char (*Input)[N]>
   using make_char_sequence =
       typename make_char_sequence_impl<N, Input, sqlpp::detail::make_index_sequence<N - 1>>::type;
 }  // namespace sqlpp

index include/sqlpp11/data_types/text/concat.h
--- include/sqlpp11/data_types/text/concat.h
+++ include/sqlpp11/data_types/text/concat.h
@@ -44,7 +44,7 @@ namespace sqlpp
     struct _alias_t
     {
       static constexpr const char _literal[] = "concat_";
-      using _name_t = sqlpp::make_char_sequence<sizeof(_literal), _literal>;
+      using _name_t = sqlpp::make_char_sequence<sizeof(_literal), &_literal>;
       template <typename T>
       struct _member_t
       {
-- 
2.17.1

